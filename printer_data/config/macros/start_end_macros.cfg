################################################################################
# Called before every print via slicer
# Purges and preps by laying arc on outer ednge of build plate
################################################################################
[gcode_macro START_PRINT]
description: Called before a print is started
gcode:
    # param variables
    {% set BED_TEMP = params.BED_TEMP | default(60) | int %}   
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP | default(220) | int %}
    {% set CHAMBER_TEMP = params.CHAMBER_TEMP | default(0) | int %}
    {% set MATERIAL = params.MATERIAL | default("PLA") %}

    # Get printer details
    {% set printer_name  = printer.save_variables.variables.printername %}
    {% set printer_type  = printer.save_variables.variables.printertype %}
    {% set printer_min_x = printer.toolhead.axis_minimum.x | int %}   
    {% set printer_min_y = printer.toolhead.axis_minimum.y | int %}   
    {% set printer_max_x = printer.toolhead.axis_maximum.x | int %}   
    {% set printer_max_y = printer.toolhead.axis_maximum.y | int %}

    # Message to terminal
    SEND_MESSAGE TYPE=INFO MSG="Preparing to print"

    {% if printer_type == "delta" %}
      # arc variables
      SEND_MESSAGE TYPE=INFO MSG="Arc prime line"
      {% set start_arc_x   = printer_min_x | int %}
      {% set start_arc_y   = printer_min_y + printer_max_y | int %}
      {% set end_arc_x     = printer_min_x + printer_max_x | int %}
      {% set end_arc_y     = printer_min_y | int %}
    {% else %}
      SEND_MESSAGE TYPE=HEAT MSG="Straight prime line"
      {% set start_prime_line_x = printer_min_x | int %}
      {% set start_prime_line_y = printer_max_y | int %}
      {% set prime_line_length = 15 %}
    {% endif %}
    
    # start print varaibles
    {% set start_print_x = printer_min_x + printer_max_x  | int %}
    {% set start_print_y = printer_min_y + printer_max_y  | int %}
    {% set start_print_z = 15 | int %}

    #Clear and home
    CLEAR_PAUSE                                                                                        ; make sure we are not in a paused state
    BED_MESH_CLEAR 
    _CG28                                                                                              ; home axis if needed

    # Move to waiting position
    G1 X{start_print_x} Y{start_print_y} Z{start_print_z} F5000                                        ; move to start position

    SAVE_GCODE_STATE NAME=START_LOCATION

    # Setup temps
    _SET_MPC_MATERIAL MATERIAL={MATERIAL}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
    SEND_MESSAGE TYPE=HEAT MSG="Bed set to {BED_TEMP}"
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP /  2}
    SEND_MESSAGE TYPE=HEAT MSG="Extruder set to {EXTRUDER_TEMP / 2}"
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP - 5} MAXIMUM={BED_TEMP + 5}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP / 2 - 5} MAXIMUM={EXTRUDER_TEMP + 5}

    #Bed meshing
    SEND_MESSAGE TYPE=INFO MSG="Initial temps reached - Starting probe"
    # Get print objects and calculate min/max x/y
    {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %} 
    {% set min_x = all_points | map(attribute=0) | min | default(printer_min_x) | round(0, 'ceil') | int %}
    {% set min_y = all_points | map(attribute=1) | min | default(printer_min_y) | round(0, 'ceil') | int %}
    {% set max_x = all_points | map(attribute=0) | max | default(printer_max_x) | round(0, 'ceil') | int %}
    {% set max_y = all_points | map(attribute=1) | max | default(printer_max_y) | round(0, 'ceil') | int %}   
    # Create a bed mesh
    {% if printer_type == "delta" %}
      DELTA_ADAPTIVE_BED_MESH PROFILE=BED{BED_TEMP}_LX{min_x}_LY{min_y}_RX{max_x}_RY{max_y}
    {% else %}
      {% if min_x < 0 %}
        {% set min_x = 0 %}
      {% endif %}
      {% if min_y < 0 %}
        {% set min_y = 0 %}
      {% endif %}
      BED_MESH_CALIBRATE ADAPTIVE=1 PROFILE=BED{BED_TEMP}_LX{min_x}_LY{min_y}_RX{max_x}_RY{max_y}
    {% endif %}

    # Move to waiting position
    G1 X{start_print_x} Y{start_print_y} Z{start_print_z} F5000                                        ; move to start position
    
    # Final heat of extruder
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}                                      ; set extruder temp to start temp
    SEND_MESSAGE TYPE=HEAT MSG="Extruder set to {EXTRUDER_TEMP}"
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP - 3} MAXIMUM={EXTRUDER_TEMP + 3}           ; wait for extruder

    # Prime line
    SEND_MESSAGE TYPE=INFO MSG="Starting prime line"
    G90
    {% if printer_type == "delta" %}
      G1 X{start_arc_x} Y{start_arc_y} Z0.4 F5000                                                      ; move to arc start
      G0 E3 F200                                                                                       ; prime extuder
      G3 X{end_arc_x} Y{end_arc_y} I103 Z0.4 E30 F400                                                  ; lay arc stripe 90deg
      G4 P500                                                                                          ; wait for 0.5 sec
      G0 Z1                                                                                            ; lift 1mm
      G4 P2000                                                                                         ; wait for 2 sec
      G0 Z{start_print_z} E-2 F5000                                                                    ; lift to start_print_z and retract
    {% else %}
      G1 X{start_prime_line_x} Y{start_prime_line_y} Z0.4 F5000
      G1 Y{start_prime_line_y - prime_line_length} E15 F200
      G1 Y{start_prime_line_y - (prime_line_length * 2)} F5000
    {% endif %}

    # Retract and reset extruder
    G1 E-0.5 F200 ; Small retract
    G92 E0

    # Finalise 
    SEND_MESSAGE TYPE=INFO MSG="Print starting"
    RESTORE_GCODE_STATE NAME=START_LOCATION                                     ; move to start position
    ENABLE_FILIMENT_SENSOR

################################################################################
# Called at print end by slicer
# Home toolhead and shuts down heaters and fans
################################################################################
[gcode_macro END_PRINT]
description: Called at the end of a print
gcode:

    SEND_MESSAGE TYPE=INFO MSG="Print ending"

    DISABLE_FILIMENT_SENSOR
    M107                                                 ; part fan off
    TURN_OFF_HEATERS                                     ; turn bed / hotend off
    G91                                                  ; relative positioning                        
    G1 Z1 F1000                                          ; z hop 1mm
    G90                                                  ; absolute positioning
    G0 X0 Y0 F6000                                       ; center toolhead
    G92 E1                                               ; reset extruder position
    G1 E-2 F300                                          ; retract 2mm
    G28                                                  ; home axis
    M18 S180                                             ; disable motors after 180s

    SEND_MESSAGE TYPE=INFO MSG="Print finished"

################################################################################
# Cancels the print and resets before calling END_PRINT
################################################################################
[gcode_macro CANCEL_PRINT]
description: Called when print is cancelled 
rename_existing: BASE_CANCEL_PRINT
gcode:

    SEND_MESSAGE TYPE=INFO MSG="Print canceling"

    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    DISABLE_FILIMENT_SENSOR
    M107                                                 ; part fan off
    TURN_OFF_HEATERS                                     ; turn bed / hotend off
    G92 E1                                               ; reset extruder position
    G1 E-2 F300                                          ; retract 2mm
    G28                                                  ; home axis
    M18 S180                                             ; disable motors after 180s
    SDCARD_RESET_FILE

    SEND_MESSAGE TYPE=INFO MSG="Print cancelled"
    

